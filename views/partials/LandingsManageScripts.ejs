<!-- views/partials/LandingsManageScripts.ejs -->
<script>
  let selectedLanding = null;

  document.addEventListener("DOMContentLoaded", () => {
    fetchLandings();

    setTimeout(()=>{
      editorWindow.on('change', ()=>{
        window.updatePreview&&window.updatePreview(editorWindow.getValue())
      });
      if(window.landingItem){
        editorWindow.setValue(window.landingItem.html)
      }
    },1000)
  });

  function previewLanding() {
    const name = document.getElementById("landingName").value;
    const metadata = getMetadata()
    const html = `<h1>TEST</h1>`

    fetch("/api/landing-pages/preview", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ name, metadata, html }),
    })
      .then((response) => response.json())
      .then((data) => {
        console.info("Landing page preview data sent");
        // Open /preview/:previewId in a new tab
        const previewUrl = `/page/preview/${data.previewId}`;
        window.open(previewUrl, '_blank');
      })
      .catch((error) => {
        console.error("Error creating preview:", error);
      });
  }

  function setNew() {
    document.querySelector('[data-tab="editor"]').disabled = true;
    document.querySelector('[data-tab="deploy"]').disabled = true
    window.localStorage.landingItemName=""
    Preview.style.display = "none"
    deleteButton.style.display = "none"
    updateButton.style.display = "none"
    createButton.style.display = 'inline-block'

    document.getElementById("landingName").value = "";
    document.getElementById("landingMetadata").value = JSON.stringify(
      {},
      null,
      2
    );
    updateHeaderDropdownLabel();
    updatePreview("")
    window.editorWindow.setValue("")
  }



  function setExisting(landingName) {

    fetch(`/api/landing-pages/${landingName}`)
      .then((response) => response.json())
      .then((data) => {
        selectedLanding = data;

        document.querySelector('[data-tab="editor"]').disabled = false;
        
        document.querySelector('[data-tab="deploy"]').disabled = false

        document.getElementById("landingName").value = data.name;
        document.getElementById("landingMetadata").value = JSON.stringify(
          data.metadata || {},
          null,
          2
        );

        window.landingItem = data
        window.localStorage.landingItemName = data.name
        updateHeaderDropdownLabel(data.name);
        window.editorWindow.setValue(data.html)
        updatePreview(data.html)

        renderDomainLinks(data?.metadata?.deployment?.domains);

        stagingUrlLink.href = `${location.origin}/page/${data.name}`
        stagingUrlText.innerHTML = `${location.origin}/page/${data.name}`

        prodUrlLi.style.display = "inline-block"
          <% if (env.LP_ALLOW_DEPLOYMENT_SECTION == '0' && env.LP_DEPLOYMENT_DOMAIN_AFFIX) { %>
            prodUrlLink.href=`http://${data.name}<%- env.LP_DEPLOYMENT_DOMAIN_AFFIX%>`
            prodUrlText.innerHTML = `http://${data.name}<%- env.LP_DEPLOYMENT_DOMAIN_AFFIX%>`
              <% } else {%>
          if (data?.metadata?.deployment?.domains.length > 0) {
            prodUrlLink.href = `http://${data?.metadata?.deployment?.domains[0]}`
            prodUrlText.innerHTML = `http://${data?.metadata?.deployment?.domains[0]}`
          } else {
            prodUrlLi.style.display = "none"
          }
        <% } %>

          createButton.style.display="none"
        Preview.style.display = "inline-block"
        updateButton.style.display = "inline-block"
        deleteButton.style.display = "inline-block"
      });
  }

  function handleSelectChange(event) {
    if (!event.target.value) {
      setNew()
    } else {
      setExisting(event.target.value)
    }
  }

  function getMetadata() {
    let metadata = JSON.parse(
      document.getElementById("landingMetadata").value || "{}"
    );
    return Object.assign(metadata, window?._metadata || {})
  }

  function createLanding() {
    const name = document.getElementById("landingName").value;
    const metadata = getMetadata()
    const html = `<h1>TEST</h1>`

    fetch("/api/landing-pages", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ name, metadata, html }),
    })
      .then((response) => response.json())
      .then((data) => {
        console.info("Landing page created successfully");
        fetchLandings();
        setExisting(name)
      });
  }

  function updateLanding() {
    const name = document.getElementById("landingName").value;
    const metadata = getMetadata()
    const html = `<h1>TEST</h1>`

    fetch(`/api/landing-pages/${name}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ name, metadata, html }),
    })
      .then((response) => response.json())
      .then((data) => {
        console.info("Landing page updated successfully");
        fetchLandings();
      });
  }

  function deleteLanding() {
    const name = document.getElementById("landingName").value;

    fetch(`/api/landing-pages/${name}`, {
      method: "DELETE",
    })
      .then((response) => response.json())
      .then((data) => {
        console.info("Landing page deleted successfully");
        fetchLandings();
        setNew()
      });
  }

  function loadActiveLandingItemFromCache(){
    if(window.localStorage.landingItemName){
      setExisting(window.localStorage.landingItemName)
    }
  }

  loadActiveLandingItemFromCache()
</script>